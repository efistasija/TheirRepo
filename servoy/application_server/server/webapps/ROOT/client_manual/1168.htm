<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title> Servoy concepts </title>
<link rel="stylesheet" type="text/css" href="stylesheet.css" />
<meta name="Generator" content="AITPublish" />
<meta name="Keywords" content="Servoy concepts" />
<link rel="stylesheet" type="text/css" href="44.css" />
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
</head>
<body onload="if (isTOCLoaded()) {expand('161');highlight('1168')}" text="#000000" link="#0000A0" alink="#008000" vlink="#FF0000"><table cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "18">
<p class="bodytext"><a href="161.htm" target="_self"><img src="125.gif" alt="Previous Topic" height="17" width="18" vspace="0" hspace="0" align="bottom" border="0" /></a></p></td>
<td width= "18">
<p class="bodytext"><a href="4560.htm" target="_self"><img src="124.gif" alt="Next Topic" height="17" width="18" vspace="0" hspace="0" align="bottom" border="0" /></a></p></td>
<td width= "48">
<p class="bodytext"><a href="javascript:expand('161');highlight('1168')" onclick="loadTOC()" target="_self"><img src="122.gif" alt="Book Contents" height="17" width="48" vspace="0" hspace="0" align="bottom" border="0" /></a></p></td>
<td width= "48">
<p class="bodytext"><a href="indexpage.htm" target="TOC"><img src="123.gif" alt="Book Index" height="17" width="48" vspace="0" hspace="0" align="bottom" border="0" /></a></p></td>
</tr>
</table>
<h2 class="heading2">Servoy concepts</h2>
<p class="bodytext">Servoy uses the following concepts:</p>
<ul class="listbullet"><li class="listbullet">Repository</li><li class="listbullet">Solution</li><li class="listbullet">Table</li><li class="listbullet">Form</li><li class="listbullet">Field</li><li class="listbullet">Dataprovider</li><li class="listbullet">Record</li><li class="listbullet">Method</li><li class="listbullet">Property</li><li class="listbullet">Plugin<br /></li></ul><h3 class="heading3">Repository</h3>
<p class="bodytext">Servoy does not have a proprietary file format. Instead, Servoy makes a clear separation between user data and application (meta) data. All metadata is stored in a database - this database is called the Repository. </p>
<p class="bodytext">The <i class="emphasis">repository</i> is the central place where all information about a solution is stored. Because of this unique architecture, Servoy allows advanced functionality such as solution versioning; concurrent development; and high availability.</p>
<h3 class="heading3">Solution</h3>
<p class="bodytext">A <i class="emphasis">solution</i> is one application built with Servoy Developer. One Solution consists of one or more forms, methods and connections. For more detail, see <span class="specialbold5">Introduction to solutions</span> in the Servoy Developer User's Guide.</p>
<h3 class="heading3">Table</h3>
<p class="bodytext">A <i class="emphasis">table</i> is a preset format of rows (records) and columns (fields) that defines a store of information in a relational database. Data from created or pre-existing tables can be used by one or more forms in a Servoy solution. Refer to the <span class="specialbold5">Solutions</span> chapter, beginning with the section on <span class="specialbold5">Creating a new database table</span> in the Servoy Developer User's Guide for more detail.</p>
<h3 class="heading3">Form</h3>
<p class="bodytext">A <i class="emphasis">form</i> is the Servoy object that is used to edit, view, modify, insert, find and delete data. Forms can contain fields, labels, graphics, tabpanels, lines, buttons, portals and shapes - each of which has its own set of design time properties. See the section <span class="specialbold5">Form elements</span> in the Servoy Developer User's Guide for detailed descriptions of form elements.</p>
<h3 class="heading3">Field</h3>
<p class="bodytext">A <i class="emphasis">field</i> in Servoy is one of the elements that can be on a form and is connected to one dataprovider. See the section <span class="specialbold5">Form elements</span> in the Servoy Developer User's Guide for other form elements.</p>
<h3 class="heading3">Dataprovider</h3>
<p class="bodytext">A <i class="emphasis">dataprovider</i> manages information. There are several types of dataproviders:</p>
<ul class="listbullet"><li class="listbullet">Column - from a database table.</li><li class="listbullet">Global - a global variable.</li><li class="listbullet">Calculation - a piece of code producing results.</li><li class="listbullet">Aggregation - a summary function on a database column</li></ul><p class="list2text">(for example SUM).</p>
<p class="bodytext">More detail can be found in the section <span class="specialbold5">Creating dataproviders</span> in the Servoy Developer User's Guide. </p>
<h3 class="heading3">Record</h3>
<p class="bodytext">One <i class="emphasis">record</i> in Servoy maps to one row in a SQL table.</p>
<h3 class="heading3">Method</h3>
<p class="bodytext">Servoy's scripting engine uses <i class="emphasis">methods</i> to identify code that belongs together. One method can contain zero or more lines of JavaScript code. Methods can be global (available to any object anywhere within a single solution) or specific to a particular form. For detail, refer to the chapter on <span class="specialbold5">Methods</span> in the Servoy Developer User's Guide.</p>
<h3 class="heading3">Property</h3>
<p class="bodytext">Servoy supports two types of properties:</p>
<ul class="listbullet"><li class="listbullet"><i class="emphasis">Runtime properties</i> - characteristics of Servoy objects (viewed in the Servoy Editor Main tree) that can be added to a method; variables that can be returned or set when a method is run. For more detail, see the chapter on <span class="specialbold5">Methods</span> - starting with the <span class="specialbold5">Introduction to methods</span> in the Servoy Developer User's Guide.<br /></li><li class="listbullet"><i class="emphasis">Design time properties</i> - design characteristics of forms and form elements that can be set in a Properties panel. For specific information, see the sections <span class="specialbold5">Form properties</span> and <span class="specialbold5">Form elements</span> from the Servoy Developer User's Guide.</li></ul><h3 class="heading3">Plugin</h3>
<p class="bodytext">To extend the functionality of Servoy you can utilize or create <i class="emphasis">plugins</i>. Servoy plugins are written in the Java programming language. </p>
<p class="bodytext">Plugins can contain specialized code and their own functions; customize the look-and-feel of Servoy; or link to resources outside the Servoy application.</p>
<p class="bodytext">To find out more information about plugins, go to the Servoy website <a class="jumptemplate" title="" href="http://www.servoy.com" target="_self">at:</a></p>
<p class="forcepagebreak"></p>
<table cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "226.8">
<p class="relatedheading">See Also</p><p class="relateditem"><a href="161.htm" target="_self">Getting Started</a></p><p class="relateditem"><a href="4560.htm" target="_self">Introduction to starting Servoy Client</a></p><p class="relateditem"><a href="1301.htm" target="_self">Exiting Servoy Client</a></p><p class="relateditem"><a href="1298.htm" target="_self">Opening a solution</a></p><p class="relateditem"><a href="1299.htm" target="_self">Closing a solution</a></p><p class="relateditem"><a href="1175.htm" target="_self">Servoy modes</a></p><p class="relateditem"><a href="1189.htm" target="_self">Finding data</a></p><p class="relateditem"><a href="1184.htm" target="_self">Viewing data</a></p><p class="relateditem"><a href="220.htm" target="_self">Editing Data</a></p><p class="relateditem"><a href="1291.htm" target="_self">Relooking up data</a></p><p class="relateditem"><a href="225.htm" target="_self">Sorting Data</a></p></td>
</tr>
</table>


</body>
</html>


